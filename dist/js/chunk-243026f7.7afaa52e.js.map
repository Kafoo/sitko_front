{"version":3,"sources":["webpack:///./src/vue/views/Places/AllPlaces.vue?8f61","webpack:///./src/vue/views/Places/AllPlaces.vue","webpack:///./src/vue/views/Places/AllPlaces.vue?402f","webpack:///./src/vue/views/Places/AllPlaces.vue?eb48","webpack:///../../../src/components/VSkeletonLoader/VSkeletonLoader.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","$t","on","$event","$router","push","_l","item","key","place","id","staticRenderFns","namespace","loading","GET_ALL_PLACES","then","name","components","PlaceCard","PrimaryContentBody","CreateButton","component","VSkeletonLoader","props","boilerplate","tile","transition","type","types","default","computed","role","$attrs","classes","elevationClasses","isLoading","rootTypes","actions","article","avatar","button","card","chip","heading","image","paragraph","sentences","table","text","methods","genBone","genBones","bone","generator","Array","length","genStructure","children","mapBones","genSkeleton","afterEnter","beforeEnter","beforeLeave","leaveCancelled","resetStyles","bones","onBeforeEnter","el","display","onBeforeLeave","h","class","style","undefined"],"mappings":"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","file":"js/chunk-243026f7.7afaa52e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"text-center\"},[_c('create-button',{staticClass:\"mb-8\",attrs:{\"text\":_vm.$t('actions.create.place')},on:{\"action\":function($event){return _vm.$router.push('/place/create/')}}})],1),(_vm.loading)?_c('div',{staticClass:\"d-flex flex-wrap justify-center\"},_vm._l(([1, 2, 3, 4, 5]),function(item){return _c('v-skeleton-loader',{key:item,staticClass:\"ma-2\",attrs:{\"type\":\"card\",\"width\":\"200px\",\"height\":\"200px\"}})}),1):_c('div',{staticClass:\"d-flex flex-wrap justify-center\"},_vm._l((_vm.places),function(place){return _c('place-card',{key:place.id,staticClass:\"ma-2\",attrs:{\"place\":place}})}),1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from \"vue\";\r\nimport { State, Getter, Action } from \"vuex-class\";\r\nimport { Component } from \"vue-property-decorator\";\r\nimport PlaceModel from \"@/ts/models/placeClass\";\r\nimport PlaceCard from \"@c/molecules/place/PlaceCard.vue\";\r\nimport PrimaryContentBody from \"@/vue/layouts/PrimaryContentBody.vue\";\r\nimport CreateButton from \"@c/atoms/app/CreateButton.vue\";\r\n\r\nconst namespace: string = \"place\";\r\n\r\n@Component({\r\n  name: \"AllPlaces\",\r\n\r\n  components: {\r\n    PlaceCard,\r\n    PrimaryContentBody,\r\n    CreateButton\r\n  }\r\n})\r\nexport default class Places extends Vue {\r\n  @Getter(\"places\", { namespace }) places?: Array<PlaceModel>;\r\n  @Action(\"GET_ALL_PLACES\", { namespace }) GET_ALL_PLACES: any;\r\n\r\n  loading = false;\r\n\r\n  created() {\r\n    this.loading = true;\r\n    this.GET_ALL_PLACES().then(() => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n}\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--14-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AllPlaces.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--14-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AllPlaces.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AllPlaces.vue?vue&type=template&id=3247074b&\"\nimport script from \"./AllPlaces.vue?vue&type=script&lang=ts&\"\nexport * from \"./AllPlaces.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VSkeletonLoader } from 'vuetify/lib/components/VSkeletonLoader';\ninstallComponents(component, {VSkeletonLoader})\n","// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { getSlot } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\nexport interface HTMLSkeletonLoaderElement extends HTMLElement {\n  _initialStyle?: {\n    display: string | null\n    transition: string\n  }\n}\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object,\n      default: () => ({}),\n    } as PropValidator<Record<string, string>>,\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return !('default' in this.$scopedSlots) || this.loading\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n\n      if (!this.isLoading) children.push(getSlot(this))\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          afterEnter: this.resetStyles,\n          beforeEnter: this.onBeforeEnter,\n          beforeLeave: this.onBeforeLeave,\n          leaveCancelled: this.resetStyles,\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n    onBeforeEnter (el: HTMLSkeletonLoaderElement) {\n      this.resetStyles(el)\n\n      if (!this.isLoading) return\n\n      el._initialStyle = {\n        display: el.style.display,\n        transition: el.style.transition,\n      }\n\n      el.style.setProperty('transition', 'none', 'important')\n    },\n    onBeforeLeave (el: HTMLSkeletonLoaderElement) {\n      el.style.setProperty('display', 'none', 'important')\n    },\n    resetStyles (el: HTMLSkeletonLoaderElement) {\n      if (!el._initialStyle) return\n\n      el.style.display = el._initialStyle.display || ''\n      el.style.transition = el._initialStyle.transition\n\n      delete el._initialStyle\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n"],"sourceRoot":""}